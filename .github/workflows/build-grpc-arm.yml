name: Build grpc armhf

on:
  workflow_dispatch:

env:
  GRPC_VERSION: v1.53.1
  TAG_VERSION: v1.53.1-2
  
permissions: write-all

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: install dependencies
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y git make cmake libssl-dev openssl

      - name: Install Cross-Compile Support
        uses: cyberjunk/gha-ubuntu-cross@v2
        with:
          arch: armhf

      - name: git clone
        shell: bash
        run: |
            git clone --recurse-submodules --depth 1 --branch ${{env.GRPC_VERSION}} https://github.com/grpc/grpc.git

      - name: build host
        shell: bash
        run: |
          cd grpc
          mkdir build-host
          cd build-host
          cmake -DCMAKE_BUILD_TYPE=Release -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DgRPC_SSL_PROVIDER=package ..
          make -j 4
          sudo make install

      - name: build armhf
        shell: bash
        run: |
          cd grpc
          mkdir build-armhf
          cd build-armhf
          
          cat > /tmp/toolchain-armhf.cmake <<'EOT'
          set(CMAKE_SYSTEM_NAME Linux)
          set(CMAKE_SYSTEM_PROCESSOR armhf)
          set(CMAKE_STAGING_PREFIX build-armhf)
          set(CMAKE_C_COMPILER /usr/bin/arm-linux-gnueabihf-gcc-10)
          set(CMAKE_CXX_COMPILER /usr/bin/arm-linux-gnueabihf-g++-10)
          set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
          set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
          EOT

          cmake -DCMAKE_TOOLCHAIN_FILE=/tmp/toolchain-armhf.cmake \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX=`pwd`/gprc-${GRPC_VERSION}/build-armhf \
                ..

          make -j 4 
          make install
          ls -lR build-armhf          

      - name: Release
        run: |
          cd grpc/build-armhf
          mv gprc-${GRPC_VERSION}/build-armhf/lib/pkgconfig gprc-${GRPC_VERSION}/build-armhf/lib/pkgconfig.BUILD_VERSION
          tar -czf grpc-armhf-${{env.GRPC_VERSION}}.tar.gz gprc-${GRPC_VERSION}
          gh release create "${{env.TAG_VERSION}}" -R Zabrimus/grpc-precompiled || true
          gh release upload "${{env.TAG_VERSION}}" grpc-armhf-${{env.GRPC_VERSION}}.tar.gz --clobber -R Zabrimus/grpc-precompiled
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
